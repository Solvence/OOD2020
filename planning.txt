
TODO :
- Fix constructor BasicAnimator

- make sure the builder/factory implementations are correct


Changes made:
Create Color class
Create Abstract shape and abstracted duplicate code and fields
Fix BasicAnimatedObject constructor to when given a list of commands, check that building a new
BasicAnimatedObject with these commands is valid.



Things to consider:
- we used java.awt for Colors despite Amit's warning against it
- We decided to allow the width/height of a Shape to be 0
- Right now, when Shapes are created we require the initial position, color, and size to be
  inputted. This may require much stress on the controller to determine the initial state.
- We don't allow overlap within the same type of command (e.g. moving x-coord from t=1-10 and
  moving y-coord from t=5-15)
- Our textual view just goes through the intervals of commands, while it's supposed to represent
  a textual view of an animation (that should maybe call getStateAt at every frame?)
- Perhaps we should use a visitor to couple the model to the view for drawing shapes: a shape
  (let's say a square) has a render method that would take in a view and call
  view.renderSquare(this)
- having a toString in Ellipse and Rectangle that just returns "Rectangle" or "Ellipse" is
  kinda awkward

Questions:
- should we actually have a getAnimatedObjects method in the model? I'm thinking maybe just a
  getShapeNames method would be better design...




